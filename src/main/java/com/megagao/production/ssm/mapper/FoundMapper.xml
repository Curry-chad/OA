<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.megagao.production.ssm.mapper.FoundMapper" >
  <resultMap id="BaseResultMap" type="com.megagao.production.ssm.domain.vo.FoundVO" >
    <id column="found_id" property="foundId" jdbcType="VARCHAR" />
    <result column="found_text" property="foundText" jdbcType="VARCHAR" />
    <result column="found_date" property="foundDate" jdbcType="TIMESTAMP" />
    <association property="employee" javaType="employee">
     <id column="emp_id" property="empId" jdbcType="VARCHAR" />
    <result column="emp_name" property="empName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="id_code" property="idCode" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="join_date" property="joinDate" jdbcType="DATE" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="degree" property="degree" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="graduate_school" property="graduateSchool" jdbcType="VARCHAR" />
    <result column="education_form" property="educationForm" jdbcType="VARCHAR" />
    </association>
  </resultMap>
	<!-- 扩展的sql -->
	<!-- 查询所有记录 -->
	<select id="find" parameterType="FoundVO" resultMap="BaseResultMap">
		SELECT
			found_id,
			found_text,
			found_date,
			emp_id
		FROM
			found
		<!-- LEFT JOIN employee ON found.emp_id = employee.emp_id -->
	</select>
	
	<select id="searchFoundByFoundId" parameterType="string" resultMap="BaseResultMap">
		SELECT
			found_id,
			found_text,
			found_date,
			emp_id
		FROM
			found
		WHERE 
			found_id like CONCAT('%',#{foundId},'%' ) 
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteBatch">
		DELETE
		FROM
			found
		WHERE
			found_id IN
		<foreach collection="array" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>
	
	<!-- 修改备注-->
	<update id="updateFoundText" parameterType="FoundVO" >
		UPDATE found
		SET found_text = #{found_text}
		WHERE
			found_id = #{foundId,jdbcType=VARCHAR}
	</update>
	
<sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        found_id, found_text, emp_id, found_date
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.megagao.production.ssm.domain.FoundExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List" />
        from found
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select 
        <include refid="Base_Column_List" />
        from found
        where found_id = #{foundId,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from found
        where found_id = #{foundId,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteByExample" parameterType="com.megagao.production.ssm.domain.FoundExample" >
        delete from found
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.megagao.production.ssm.domain.Found" >
        insert into found (found_id, found_text, emp_id, 
            found_date)
        values (#{foundId,jdbcType=VARCHAR}, #{foundText,jdbcType=VARCHAR}, #{empId,jdbcType=VARCHAR}, 
            #{foundDate,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" parameterType="com.megagao.production.ssm.domain.Found" >
        insert into found
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="foundId != null" >
                found_id,
            </if>
            <if test="foundText != null" >
                found_text,
            </if>
            <if test="empId != null" >
                emp_id,
            </if>
            <if test="foundDate != null" >
                found_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="foundId != null" >
                #{foundId,jdbcType=VARCHAR},
            </if>
            <if test="foundText != null" >
                #{foundText,jdbcType=VARCHAR},
            </if>
            <if test="empId != null" >
                #{empId,jdbcType=VARCHAR},
            </if>
            <if test="foundDate != null" >
                #{foundDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.megagao.production.ssm.domain.FoundExample" resultType="java.lang.Integer" >
        select count(*) from found
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update found
        <set >
            <if test="record.foundId != null" >
                found_id = #{record.foundId,jdbcType=VARCHAR},
            </if>
            <if test="record.foundText != null" >
                found_text = #{record.foundText,jdbcType=VARCHAR},
            </if>
            <if test="record.empId != null" >
                emp_id = #{record.empId,jdbcType=VARCHAR},
            </if>
            <if test="record.foundDate != null" >
                found_date = #{record.foundDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update found
        set found_id = #{record.foundId,jdbcType=VARCHAR},
            found_text = #{record.foundText,jdbcType=VARCHAR},
            emp_id = #{record.empId,jdbcType=VARCHAR},
            found_date = #{record.foundDate,jdbcType=TIMESTAMP}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.megagao.production.ssm.domain.Found" >
        update found
        <set >
            <if test="foundText != null" >
                found_text = #{foundText,jdbcType=VARCHAR},
            </if>
            <if test="empId != null" >
                emp_id = #{empId,jdbcType=VARCHAR},
            </if>
            <if test="foundDate != null" >
                found_date = #{foundDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where found_id = #{foundId,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.megagao.production.ssm.domain.Found" >
        update found
        set found_text = #{foundText,jdbcType=VARCHAR},
            emp_id = #{empId,jdbcType=VARCHAR},
            found_date = #{foundDate,jdbcType=TIMESTAMP}
        where found_id = #{foundId,jdbcType=VARCHAR}
    </update>
</mapper>